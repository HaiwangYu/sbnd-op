#include "simulationservices_sbnd.fcl"
#include "messages_sbnd.fcl"

#include "detsimmodules_sbnd.fcl"
#include "crtsimmodules_sbnd.fcl"
#include "rootoutput_sbnd.fcl"
#include "opdetdigitizer_sbnd.fcl"


process_name: wclsdatasp

services:
{
  TFileService: { fileName: @local::sbnd_tfileoutput.fileName }
  @table::sbnd_detsim_services
  FileCatalogMetadata: @local::sbnd_file_catalog_mc
  AuxDetExptGeoHelperInterface: { service_provider: "sbndcode/CRT/CRTGeometryHelper" }
  AuxDetGeometry: { @table::sbnd_geo_source }
}


source: {
   module_type: RootInput
   saveMemoryObjectThreshold: 10485760

   #inputCommands: ["drop *", "keep recob::Wires_*_*_*"]
   #inputCommands: ["drop *", "keep *_*_*_Swizzler"]
}

physics :{
   producers: {
      wctsp : {
         module_type : WireCellToolkit
         wcls_main: {
            tool_type: WCLS
            apps: ["Pgrapher"]

            logsinks: ["stdout"]
            loglevels: ["debug"]

            # Libraries in which to look for WCT components
            plugins: ["WireCellSio", "WireCellRoot", "WireCellPgraph", "WireCellTbb", "WireCellLarsoft"]

            # The tool marshals the art::Event to these visitors before.
            # See notes below in params.
            inputers: [
                "wclsOpFlashSource"
                , "wclsRawFrameSource"
                ]

            # or after the WCT app is run.  These names MUST be used identically in the Jsonnet
            outputers: []

            configs: ["wcls-matching.jsonnet"]

            # Set the "external variables" required by the Jsonnet.
            params : {
               # label:instance:processName
               opflash0_input_label: "opflashtpc0:",
               opflash1_input_label: "opflashtpc1:",
               raw_input_label: "daq:"
            }
         }
      }
   }

   p1 : [ wctsp ]
   trigger_paths : [ p1 ]
   
   o1 : [ out1 ]
   end_paths: [ o1 ]
}

outputs:{
   out1:
   {
      @table::sbnd_rootoutput # inherit shared settings
      dataTier: "reconstructed"
      outputCommands : [
         "drop *"
         # "keep *_*_*_*"
      ]
   }
}
